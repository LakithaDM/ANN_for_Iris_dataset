# -*- coding: utf-8 -*-
"""Iris_ANN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11ymLPM8i5wo-8QeWgFtsefVPxq5LfdiA
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import tensorflow as tf

dataset = sns.load_dataset('iris')

dataset.shape

dataset.head()

x = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1].values

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
y = le.fit_transform(y)

y = tf.keras.utils.to_categorical(y, num_classes=3)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2, random_state=1)

plt.boxplot(x_train)
plt.show()

from tensorflow import keras

model = tf.keras.models.Sequential()


model.add(keras.layers.Dense(64,        
                        input_shape=(4,),
                        name='Hidden-Layer-1', 
                        activation='relu'))    


model.add(keras.layers.Dense(64,
                              name='Hidden-Layer-2',
                              activation='relu'))

model.add(keras.layers.Dense(3,
                             name='Output-Layer',
                             activation='softmax'))

model.compile(loss='categorical_crossentropy',
              metrics=['accuracy'])

model.summary()

history=model.fit(x_train,
          y_train,
          batch_size=15,
          epochs=100,
          verbose=1)

model.evaluate(x_test,y_test)

pred_input = [[5.1,	3.5,	1.4	,0.2	]]
pred = model.predict(pred_input)
print("Probability Predictions :" , pred)

prediction = np.argmax(pred)
flower = le.inverse_transform([prediction])
print("Predicted Flower Type: ", flower[0].upper())